#version 430

struct Cluster
{
    vec3 min;
    int isActive;
    vec3 max;
    float pad1;
};

layout(std430, binding = 2) buffer clustersBlock {
	Cluster clusters[];
};

layout(std430, binding = 6) buffer activeClustersBlock {
	uint activeClusters[];
};

layout(std430, binding = 7) buffer counter {
	uint globalActiveClusterCount[];
};

uniform uint numClusters;

layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;
void main() 
{
    uint clusterIndex = gl_GlobalInvocationID.x;
    if(clusterIndex >= numClusters) return;
    
    if(clusters[clusterIndex].isActive==1)
    {
        uint offset = atomicAdd(globalActiveClusterCount[0], 1);
        activeClusters[offset] = clusterIndex;
    }   
}