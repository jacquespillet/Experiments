#version 430 core

layout (local_size_x = 16, local_size_y = 16) in;

layout (binding = 0, rgba32f) uniform image2D displacement;
layout (binding = 1, rgba32f) uniform image2D normals;

uniform int N;

void main(void)
{
	ivec2 x = ivec2(gl_GlobalInvocationID.xy);
	float h = imageLoad(displacement, x).r;
	
	vec3 normal = vec3(0,1,0);
	normal.x = imageLoad(displacement, x + ivec2(1,0)).z - imageLoad(displacement, x - ivec2(1,0)).z;    
	normal.y = imageLoad(displacement, x - ivec2(0,1)).z - imageLoad(displacement, x + ivec2(0, 1)).z;    
	imageStore(normals, x, vec4(normalize(normal), 1));
}

