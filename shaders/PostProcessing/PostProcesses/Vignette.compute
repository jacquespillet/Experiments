//inputs
#version 440
//output
layout ( binding = 0 , rgba16f ) uniform image2D textureIn;
layout ( binding = 1 , rgba16f ) uniform image2D textureOut;

layout ( local_size_x = 32 , local_size_y = 32) in;

uniform float roundness;
uniform float opacity;
vec3 vignetteIntensity(vec2 uv, vec2 resolution, float opacity, float roundness)
{
    float intensity = uv.x * uv.y * (1.0 - uv.x) * (1.0 - uv.y);
    return vec3(clamp(pow((resolution.x / roundness) * intensity, opacity), 0.0, 1.0));
}
void main()
{
    ivec2 pixelCoord = ivec2 ( gl_GlobalInvocationID.xy );
    vec3 color = imageLoad(textureIn, pixelCoord).rgb;
    vec2 uv = vec2(pixelCoord) / vec2(imageSize(textureIn));
    
    color *= vignetteIntensity(uv, vec2(imageSize(textureIn)), opacity, roundness);
    imageStore ( textureOut , pixelCoord , vec4(color, 1));
}